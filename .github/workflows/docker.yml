name: Docker

on:
    push:
        tags:
            - "sushii-2 v*"
            - "sushii-api v*"

env:
    SUSHII_2_IMAGE_NAME: ghcr.io/sushiibot/sushii-2
    SUSHII_API_IMAGE_NAME: ghcr.io/sushiibot/sushii-api

jobs:
    push:
        name: Build and publish Docker Image
        runs-on: ubuntu-latest
        if: github.event_name == 'push'
        steps:
            - uses: actions/checkout@v2

            - name: Select image
              id: docker_image_select
              run: |
                  echo ${GITHUB_REF#refs/*/}

                  if [[ ${GITHUB_REF#refs/*/} == sushii-2* ]]
                  then
                      echo ::set-output name=$SUSHII_2_IMAGE_NAME
                      echo ::set-output docker_file="./sushii-2/Dockerfile"
                      echo ::set-output description="Moderation bot for Discord"
                      exit 0
                  fi

                  if [[ ${GITHUB_REF#refs/*/} == sushii-api* ]]
                  then
                      echo ::set-output name=$SUSHII_API_IMAGE_NAME
                      echo ::set-output docker_file="./sushii-api/Dockerfile"
                      echo ::set-output description="GraphQL API server for sushii2"
                      exit 0
                  fi

                  echo "Tags did not match packages"
                  exit 1

            - name: uhh
              run: |
                  echo ${{ steps.docker_image_select.outputs.name }}

            - name: Docker meta
              id: docker_meta
              uses: crazy-max/ghaction-docker-meta@v1
              with:
                  images: ${{ steps.docker_image_select.outputs.name }}
                  tag-sha: true
                  tag-semver: |
                      {{version}}
                      {{major}}.{{minor}}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Cache Docker layers
              uses: actions/cache@v2
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-

            - name: Login to DockerHub
              uses: docker/login-action@v1
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.CR_PAT }}

            - name: Build and push image to GitHub Packages
              uses: docker/build-push-action@v2
              with:
                  context: .
                  file: ${{ steps.docker_image_select.outputs.name }}
                  push: true
                  cache-from: type=local,src=/tmp/.buildx-cache
                  cache-to: type=local,dest=/tmp/.buildx-cache
                  tags: ${{ steps.docker_meta.outputs.tags }}
                  labels: |
                      ${{ steps.docker_meta.outputs.labels }}
                      org.opencontainers.image.description=${{ steps.docker_image_select.outputs.description }}
